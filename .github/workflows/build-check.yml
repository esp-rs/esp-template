name: Check format and compilation

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
  pull_request:
  schedule:
    - cron: '50 7 * * *'

jobs:
  format-clippy-check:
    name: Clippy | Fmt Checks (esp32c3)
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt, clippy
      - name: Setup | Std
        run: rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu
      - name: Setup | Default to nightly
        run: rustup default nightly
      - name: Setup | cargo-generate
        run:  |
          sudo curl -L "https://github.com/cargo-generate/cargo-generate/releases/latest/download/cargo-generate-$(git ls-remote --refs --sort="version:refname" --tags "https://github.com/cargo-generate/cargo-generate" | cut -d/ -f3- | tail -n1)-x86_64-unknown-linux-gnu.tar.gz" -o "/home/runner/.cargo/bin/cargo-generate.tar.gz"
          tar xf "/home/runner/.cargo/bin/cargo-generate.tar.gz" -C /home/runner/.cargo/bin
          chmod u+x /home/runner/.cargo/bin/cargo-generate
      - name: Setup | ldproxy
        run: |
          sudo curl -L "https://github.com/esp-rs/embuild/releases/latest/download/ldproxy-x86_64-unknown-linux-gnu.zip" -o "/home/runner/.cargo/bin/ldproxy.zip"
          unzip "/home/runner/.cargo/bin/ldproxy.zip" -d /home/runner/.cargo/bin
          chmod u+x /home/runner/.cargo/bin/ldproxy
      - name: Generate
        run: cargo generate --git https://github.com/esp-rs/esp-template --name test-esp32c3 --vcs none --silent -d mcu=esp32c3 -d devcontainer=false
      - name: Build | Fmt Check
        run: cd test-esp32c3; cargo fmt -- --check
      - name: Build | Clippy
        run: cd test-esp32c3; cargo clippy --no-deps
  compile-check:
    name: Build using the generated Dockerfile
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        board: ['esp32', 'esp32s2', 'esp32s3', 'esp32c3']
    steps:
      - name: Install cargo-generate
        run: |
          sudo curl -L "https://github.com/cargo-generate/cargo-generate/releases/latest/download/cargo-generate-$(git ls-remote --refs --sort="version:refname" --tags "https://github.com/cargo-generate/cargo-generate" | cut -d/ -f3- | tail -n1)-x86_64-unknown-linux-gnu.tar.gz" -o "/home/runner/.cargo/bin/cargo-generate.tar.gz"
          tar xf "/home/runner/.cargo/bin/cargo-generate.tar.gz" -C /home/runner/.cargo/bin
          chmod u+x /home/runner/.cargo/bin/cargo-generate
      - name: Generate
        run: cargo generate --git https://github.com/esp-rs/esp-template --name test-${{ matrix.board }} --vcs none --silent -d mcu=${{ matrix.board }} -d devcontainer=true
      - name: Update ownership
        run: |
          sudo chown 1000:1000 -R test-${{ matrix.board }}
      - uses: docker/build-push-action@v2
        with:
          context: .
          tags: test-${{ matrix.board }}:latest
          build-args: ESP_BOARD=${{ matrix.board }}
          file: test-${{ matrix.board }}/.devcontainer/Dockerfile
          push: false
      - name: Run the build process with Docker
        uses: addnab/docker-run-action@v3
        with:
            image: test-${{ matrix.board }}:latest
            options: -u esp -v ${{ github.workspace }}/test-${{ matrix.board }}:/home/esp/test-${{ matrix.board }}
            run: |
              cd /home/esp/test-${{ matrix.board }}
              bash -c 'source /home/esp/export-esp.sh && cargo build'

