name: CI
on:
  push:
    paths-ignore:
      - "**/README.md"
  pull_request:
    paths-ignore:
      - "**/README.md"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SSID: ""
  PASSWORD: ""

# Cancel any currently running workflows from the same PR, branch, or
# tag when a new workflow is triggered.
#
# https://stackoverflow.com/a/66336834
concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

jobs:
  verify:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        chip: [
            "esp32",
            "esp32c2",
            "esp32c3",
            "esp32c6",
            "esp32h2",
            "esp32s2",
            "esp32s3",
          ]

    steps:
      - uses: actions/checkout@v4
        with:
          path: "esp-template-gh"

      # Rust toolchain for Xtensa:
      - if: matrix.chip == 'esp32' || matrix.chip == 'esp32s2' || matrix.chip == 'esp32s3'
        uses: esp-rs/xtensa-toolchain@v1.5
        with:
          default: true
          buildtargets: ${{ matrix.chip }}
          ldproxy: false

      # Rust toolchain for RISC-V:
      - if: matrix.chip != 'esp32' && matrix.chip != 'esp32s2' && matrix.chip != 'esp32s3'
        uses: dtolnay/rust-toolchain@nightly
        with:
          target: riscv32imac-unknown-none-elf
          components: clippy,rustfmt,rust-src

      - uses: Swatinem/rust-cache@v2

      - name: Install cargo-generate (binary)
        continue-on-error: true
        id: binary
        run: |
          VERSION="$(git ls-remote --refs --sort="version:refname" --tags "https://github.com/cargo-generate/cargo-generate" | cut -d/ -f3- | tail -n1)"
          sudo curl \
            -L "https://github.com/cargo-generate/cargo-generate/releases/latest/download/cargo-generate-$VERSION-x86_64-unknown-linux-gnu.tar.gz" \
            -o "/home/runner/.cargo/bin/cargo-generate.tar.gz"
          tar xf "/home/runner/.cargo/bin/cargo-generate.tar.gz" -C "/home/runner/.cargo/bin/"
          chmod u+x "/home/runner/.cargo/bin/cargo-generate"

      - name: Install cargo-generate (source)
        if: steps.binary.outcome != 'success'
        run: cargo install cargo-generate

      - name: generate and check
        run: bash esp-template-gh/.github/verify.sh ${{ matrix.chip }}
