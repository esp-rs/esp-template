{%- if mcu == "esp32" or mcu == "esp32s2" or mcu == "esp32s3" -%}
[target.xtensa-{{ mcu }}-none-elf]
{%- else -%}
[target.riscv32imac-unknown-none-elf]
{%- endif %}
runner = "espflash --monitor"

[build]
{% if mcu == "esp32" or mcu == "esp32s2" or mcu == "esp32s3" -%}
{% if mcu == "esp32s2" -%}
rustflags = [
  # Enable the atomic codegen option for Xtensa
  "-C", "target-feature=+s32c1i",

  # Tell the `core` library that we have atomics, even though it's not
  # specified in the target definition
  "--cfg", 'target_has_atomic="8"',
  "--cfg", 'target_has_atomic="16"',
  "--cfg", 'target_has_atomic="32"',
  "--cfg", 'target_has_atomic="ptr"',

  "-C", "link-arg=-nostartfiles",
  "-C", "link-arg=-Wl,-Tlinkall.x",
]
{%- else -%}
rustflags = [
  "-C", "link-arg=-nostartfiles",
  "-C", "link-arg=-Wl,-Tlinkall.x",
]
{%- endif %}
target = "xtensa-{{ mcu }}-none-elf"
{%- else -%}
rustflags = [
  # Required to obtain backtraces (e.g. when using the "esp-backtrace" crate.)
  # NOTE: May negatively impact performance of produced code
  "-C", "force-frame-pointers",
  "-C", "link-arg=-Tlinkall.x",
]
target = "riscv32imac-unknown-none-elf"
{%- endif %}

[unstable]
{% if alloc -%}
build-std = ["alloc", "core"]
{%- else -%}
build-std = ["core"]
{%- endif %}
